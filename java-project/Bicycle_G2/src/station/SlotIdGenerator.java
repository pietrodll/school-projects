package station;

import java.io.ObjectStreamException;
import java.io.Serializable;

/**
 * An ID generator for the cards. The ID of a {@code Slot} is the ID of its {@code Station} * 1000  plus a unique, within the {@code Station}, number.
 * @author Chloé
 *
 */
public class SlotIdGenerator implements Serializable {

	/**
	 * Generated by Papyrus
	 */
	private static final long serialVersionUID = -3812093926679281274L;
	
	private static SlotIdGenerator instance = null;
		
	private SlotIdGenerator() {}
		
	public static synchronized SlotIdGenerator getInstance() {
		if (instance == null) { instance = new SlotIdGenerator(); }
		return instance;
	}
		
	/**
	 * Creates the {@code Slot} ID with the {@code Station ID}
	 * @param s
	 * @return
	 */
	public synchronized int getSlotID(Station s) {
		int numSlots = s.getParkingSlots().size();
		return 1000*s.getId() + numSlots ;
	}
	/**
	 * This methods ensures that even when an {@code SlotIDGenerator} is serialized, the unique instance is always returned.
	 * @return The unique instance of the class.
	 * @throws ObjectStreamException
	 */
	public Object readResolve() throws ObjectStreamException {
		return instance;
	}

}
 